name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # This job tests the PR before allowing a merge
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"  # Update Go version to 1.23 to match go.mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/*.go') }}
          restore-keys: |
            ${{ runner.os }}-go-build-

      - name: Install dependencies
        run: go mod tidy && go mod download

      - name: Run Unit Tests with Race Detection
        run: go test -v -race ./... | tee test_output.txt

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_output.txt

  build:
    needs: test # Ensure build runs only after tests pass
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/*.go') }}
          restore-keys: |
            ${{ runner.os }}-go-build-

      - name: Install dependencies
        run: go mod tidy && go mod download

      - name: Build for ${{ matrix.os }}
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            GOOS=linux GOARCH=amd64 go build -o kasmlink-linux ./cmd
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            GOOS=windows GOARCH=amd64 go build -o kasmlink.exe ./cmd
          fi

      - name: Upload Linux Build
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: kasmlink-linux
          path: kasmlink-linux

      - name: Upload Windows Build
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: kasmlink-windows
          path: kasmlink.exe
